<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <import resource="spring-service.xml"/>

    <!--1.扫描service下的包：只要该目录下有@Service注解就会被扫描到-->
    <context:component-scan base-package="com.kuang.service"/>

    <!--2.将我们的所有业务类注入到Spring，可以通过配置，或者注解（@Service   @Autowired）-->
    <bean id="BookServiceImpl" class="com.kuang.service.BookServiceImpl">
        <property name="bookMapper" ref="bookMapper"/>
        <!--这个是依赖注入的方式——set注入：前提是service类中内部有set方法
        通过property标签配置，name指的是set方法中后面的名字，需将第一个首字母改为小写
        ref则引用这个对象（容器中bean的id）

        依赖注入方式——构造方法注入：前提是service类中提供有参构造
        通过constructor-arg标签配置，name指的是构造方法内部的参数名，ref引用对象
        例：
        <bean id="BookServiceImpl" class="com.kuang.service.BookServiceImpl">
            <constructor-arg name="bookMapper" ref="bookMapper"/>
        </bean>
        -->



        <!--通过配置：
         <import resource="classpath:spring-service-dao.xml"
         或者通过IDEA自动放到同一个上下文中
         -->

    </bean>



    <!--3.声明式事务配置-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--注入数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <!--4.AOP事务支持（具体横切到哪里）-->

</beans>

